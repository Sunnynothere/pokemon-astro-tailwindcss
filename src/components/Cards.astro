---
import type { PokemonType, PokemonBasic, PokemonTypeString } from '../types/pokemon';
import { getTypeColor } from '../types/pokemon';

interface Props {
  pokemon: {
    name: string;
    url: string;
  }
}

interface Props {
  pokemon: PokemonBasic 
}

const { pokemon } = Astro.props;

const getId = () => {
  return pokemon.url.split('/')[6];
}

// Fetch pokemon details to get types
const response = await fetch(pokemon.url);
const pokemonData = await response.json();
const types: PokemonTypeString[] = pokemonData.types.map((type: PokemonType) => type.type.name as PokemonTypeString);

---

<a href={`/pokemon/${getId()}`} class="block p-4"> 
  <div class="pokemon-card w-full max-w-[350px] h-auto mx-auto rounded-xl bg-yellow-400 transform transition-transform hover:scale-105 border-2 border-yellow-600" data-name={pokemon.name}>
    <div class="text-center bg-gradient-to-r from-yellow-200 to-yellow-300 rounded-lg p-4 m-3"> 
      <img 
        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${getId()}.png`}
        alt={pokemon.name}
        class="w-[150px] sm:w-[200px] h-[150px] sm:h-[200px] inline-block"
      />
    </div>
    
    <div class="bg-[#f4e4bc] p-4 rounded-b-lg mx-3 mb-3"> 
      <h2 class="text-center text-lg sm:text-xl py-2 text-black capitalize font-semibold">
        {pokemon.name}
      </h2>
      
      <div class="flex flex-wrap gap-2 justify-center"> 
        {types.map((type: PokemonTypeString) => (
          <span class={`px-3 py-1 rounded text-white text-sm ${getTypeColor(type)}`}>
            {type}
          </span>
        ))}
      </div>
    </div>
  </div>
</a>

<style>
  .pokemon-card {
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  .pokemon-card:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }
</style>